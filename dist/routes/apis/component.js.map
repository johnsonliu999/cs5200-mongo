{"version":3,"sources":["../../../routes/apis/component.js"],"names":["Component","require","model","View","express","router","Router","get","req","res","find","err","components","send","json","findById","params","cid","populate","path","then","c","catch","status","put","findByIdAndUpdate","name","body","exec","a","delete","findByIdAndRemove","view","post","save","v","id","module","exports"],"mappings":"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","file":"component.js","sourcesContent":["const Component = require('../../models/component').model;\nconst View = require('../../models/view').model;\n\nvar express = require('express');\nvar router = express.Router();\n\nrouter.get('/', (req, res) => {\n    Component.find((err, components) => {\n        if (err) res.send(err);\n        else res.json(components)\n    });\n});\n\nrouter.get('/:cid', (req, res) => {\n    Component.findById(req.params.cid)\n        .populate({\n            path: 'view',\n            populate: {path: 'widgets'}\n        })\n        .populate('controller')\n        .then(c => res.json(c))\n        .catch(err => res.status(503).send(err))\n});\n\nrouter.put('/:cid', (req, res) => {\n    Component.findByIdAndUpdate(req.params.cid,\n        {name: req.body.name},\n        {'new': true})\n        .exec()\n        .then(a => res.json(a))\n        .catch(err => res.status(503).send(err));\n});\n\nrouter.delete('/:cid', (req, res) => {\n    Component.findByIdAndRemove(req.params.cid)\n        .exec()\n        .then(() => res.status(204).send())\n        .catch(err => res.status(503).send(err));\n});\n\n// for view\nrouter\n    .get('/:cid/view', (req, res) => {\n        Component.findById(req.params.cid)\n            .populate({\n                path:'view',\n                populate:{path:'widgets'\n                }})\n            .exec()\n            .then(c => res.json(c.view))\n            .catch(err => res.status(503).send(err));\n    })\n    .post('/:cid/view', (req, res) => {\n        const view = new View(req.body);\n        view.save()\n            .then(v => Component.findByIdAndUpdate(\n                req.params.cid,\n                {'$set': {view: v.id}},\n                {'new': true})\n                .exec()\n                .then(() => res.json(v)))\n            .catch(err => res.status(503).send(err));\n    });\n\nmodule.exports = router;\n"]}