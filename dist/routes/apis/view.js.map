{"version":3,"sources":["../../../routes/apis/view.js"],"names":["Widget","require","model","View","express","router","Router","get","req","res","find","err","applications","send","json","findById","params","wid","populate","exec","then","a","catch","status","put","findByIdAndUpdate","vid","body","v","delete","findByIdAndRemove","widgets","forEach","Promise","reject","post","widget","save","w","id","module","exports"],"mappings":"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","file":"view.js","sourcesContent":["const Widget = require('../../models/widget').model;\nconst View = require('../../models/view').model;\n\nvar express = require('express');\nvar router = express.Router();\n\nrouter.get('/', (req, res) => {\n    View.find((err, applications) => {\n        if (err) res.send(err);\n        else res.json(applications)\n    });\n});\n\nrouter.get('/:vid', (req, res) => {\n    View.findById(req.params.wid)\n        .populate('widgets')\n        .exec()\n        .then(a => res.json(a))\n        .catch(err => res.status(503).send(err))\n});\n\nrouter.put('/:vid', (req, res) => {\n    View.findByIdAndUpdate(req.params.vid,\n        req.body,\n        {'new': true})\n        .exec()\n        .then(v => res.json(v))\n        .catch(err => res.status(503).send(err));\n});\n\nrouter.delete('/:vid', (req, res) => {\n    View.findByIdAndRemove(req.params.vid)\n        .then(v => v.widgets.forEach(\n            wid => Widget.findByIdAndRemove(wid)\n                .catch(err => Promise.reject(err))\n        ))\n        .then(() => res.status(204).send())\n        .catch(err => res.status(503).send(err));\n});\n\n// for widget\nrouter.get('/:vid/widget', (req, res) => {\n    View.findById(req.params.vid)\n        .populate('widgets')\n        .exec()\n        .then(v => res.json(v.widgets || []))\n        .catch(err => res.status(503).send(err));\n});\n\nrouter.post('/:vid/widget', (req, res) => {\n    const widget = new Widget(req.body);\n    widget.save()\n        .then(w => View.findByIdAndUpdate(\n            req.params.vid,\n            {'$push': {widgets: w.id}},\n            {'new': true})\n            .exec()\n            .then(() => res.json(w)))\n        .catch(err => res.status(503).send(err));\n});\n\nrouter.put('/:vid/widget/:wid', (req, res) => {\n    Widget.findByIdAndUpdate(\n        req.params.wid,\n        req.body,\n        {'new': true})\n        .exec()\n        .then(w => res.json(w))\n        .catch(err => res.status(503).send(err));\n});\n\nrouter.delete('/:vid/widget/:wid', (req, res) => {\n    Widget.findByIdAndRemove(req.params.wid)\n        .then(() => res.status(204).send())\n        .catch(err => res.status(503).send(err));\n});\n\nmodule.exports = router;\n"]}