{"version":3,"sources":["../../../routes/apis/widget.js"],"names":["Widget","require","model","express","router","Router","get","req","res","find","err","widgets","send","json","findById","params","wid","widget","post","d","username","body","save","put","console","log","findByIdAndUpdate","then","w","catch","status","delete","findByIdAndRemove","module","exports"],"mappings":";;AAAA,IAAMA,SAASC,QAAQ,qBAAR,EAA+BC,KAA9C;;AAEA,IAAIC,UAAUF,QAAQ,SAAR,CAAd;AACA,IAAIG,SAASD,QAAQE,MAAR,EAAb;;AAEAD,OAAOE,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1BR,WAAOS,IAAP,CAAY,UAACC,GAAD,EAAMC,OAAN,EAAkB;AAC1B,YAAID,GAAJ,EAASF,IAAII,IAAJ,CAASF,GAAT,EAAT,KACKF,IAAIK,IAAJ,CAASF,OAAT;AACR,KAHD;AAIH,CALD;;AAOAP,OAAOE,GAAP,CAAW,OAAX,EAAoB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC9BR,WAAOc,QAAP,CAAgBP,IAAIQ,MAAJ,CAAWC,GAA3B,EACI,UAACN,GAAD,EAAMO,MAAN,EAAgB;AACZ,YAAIP,GAAJ,EAASF,IAAII,IAAJ,CAASF,GAAT,EAAT,KACKF,IAAIK,IAAJ,CAASI,MAAT;AACR,KAJL;AAKH,CAND;;AASAb,OAAOc,IAAP,CAAY,GAAZ,EAAiB,UAACX,GAAD,EAAMC,GAAN,EAAc;AAC3B,QAAMW,IAAI,IAAInB,MAAJ,CAAW,EAACoB,UAAUb,IAAIc,IAAJ,CAASD,QAApB,EAAX,CAAV;AACAD,MAAEG,IAAF,CAAO,UAACZ,GAAD,EAAMO,MAAN,EAAiB;AACpB,YAAIP,GAAJ,EAASF,IAAII,IAAJ,CAASF,GAAT,EAAT,KACKF,IAAIK,IAAJ,CAASI,MAAT;AACR,KAHD;AAIH,CAND;;AAQAb,OAAOmB,GAAP,CAAW,OAAX,EAAoB,UAAChB,GAAD,EAAMC,GAAN,EAAc;AAC9BgB,YAAQC,GAAR,CAAY,UAAZ;AACAD,YAAQC,GAAR,CAAYlB,IAAIQ,MAAhB,EAAwBR,IAAIc,IAA5B;AACArB,WAAO0B,iBAAP,CACInB,IAAIQ,MAAJ,CAAWC,GADf,EAEIT,IAAIc,IAFR,EAGI,EAAC,OAAO,IAAR,EAHJ,EAIKM,IAJL,CAIU;AAAA,eAAKnB,IAAIK,IAAJ,CAASe,CAAT,CAAL;AAAA,KAJV,EAKKC,KALL,CAKW;AAAA,eAAOrB,IAAIsB,MAAJ,CAAW,GAAX,EAAgBlB,IAAhB,CAAqBF,GAArB,CAAP;AAAA,KALX;AAMH,CATD;;AAWAN,OAAO2B,MAAP,CAAc,OAAd,EAAuB,UAACxB,GAAD,EAAMC,GAAN,EAAc;AACjCR,WAAOgC,iBAAP,CAAyBzB,IAAIQ,MAAJ,CAAWC,GAApC,EACKW,IADL,CACU;AAAA,eAAMnB,IAAIsB,MAAJ,CAAW,GAAX,EAAgBlB,IAAhB,EAAN;AAAA,KADV,EAEKiB,KAFL,CAEW;AAAA,eAAOrB,IAAIsB,MAAJ,CAAW,GAAX,EAAgBlB,IAAhB,CAAqBF,GAArB,CAAP;AAAA,KAFX;AAGH,CAJD;;AAMAuB,OAAOC,OAAP,GAAiB9B,MAAjB","file":"widget.js","sourcesContent":["const Widget = require('../../models/widget').model;\n\nvar express = require('express');\nvar router = express.Router();\n\nrouter.get('/', (req, res) => {\n    Widget.find((err, widgets) => {\n        if (err) res.send(err);\n        else res.json(widgets)\n    });\n});\n\nrouter.get('/:wid', (req, res) => {\n    Widget.findById(req.params.wid,\n        (err, widget) =>{\n            if (err) res.send(err);\n            else res.json(widget);\n        });\n});\n\n\nrouter.post('/', (req, res) => {\n    const d = new Widget({username: req.body.username});\n    d.save((err, widget) => {\n        if (err) res.send(err);\n        else res.json(widget)\n    });\n});\n\nrouter.put('/:wid', (req, res) => {\n    console.log('call wid');\n    console.log(req.params, req.body);\n    Widget.findByIdAndUpdate(\n        req.params.wid,\n        req.body,\n        {'new': true})\n        .then(w => res.json(w))\n        .catch(err => res.status(503).send(err));\n});\n\nrouter.delete('/:wid', (req, res) => {\n    Widget.findByIdAndRemove(req.params.wid)\n        .then(() => res.status(204).send())\n        .catch(err => res.status(503).send(err));\n});\n\nmodule.exports = router;\n"]}